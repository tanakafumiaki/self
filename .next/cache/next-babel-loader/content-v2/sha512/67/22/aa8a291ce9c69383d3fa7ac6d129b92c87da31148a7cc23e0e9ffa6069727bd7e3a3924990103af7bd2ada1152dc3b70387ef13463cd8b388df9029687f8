{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tanakafumiaki/Desktop/self-introduction/src/pages/index.tsx\",\n    _this = this;\n\nvar Page = function Page(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#FF8A80',\n      // padding: '20px',\n      fontSize: '50px',\n      position: \"relative\",\n      top: '20px',\n      textAlign: 'center',\n      height: '60px'\n    },\n    children: \"Welcome\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = Page;\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\nvar _c2;\n\n$RefreshReg$(_c2, \"Page\");","map":{"version":3,"sources":["/Users/tanakafumiaki/Desktop/self-introduction/src/pages/index.tsx"],"names":["Page","backgroundColor","fontSize","position","top","textAlign","height"],"mappings":";;;;;AAGA,IAAMA,IAAc,GAAG,SAAjBA,IAAiB,CAAA,KAAA,EAAK;AAAA,SAAA,aACxB,OAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAE;AACRC,MAAAA,eAAe,EADP,SAAA;AAER;AACAC,MAAAA,QAAQ,EAHA,MAAA;AAIRC,MAAAA,QAAQ,EAJA,UAAA;AAKRC,MAAAA,GAAG,EALK,MAAA;AAMRC,MAAAA,SAAS,EAND,QAAA;AAORC,MAAAA,MAAM,EAAE;AAPA,KAAZ;AAAA,IAAA,QAAA,EAAA;AAAA,GAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,IAAA,QAAA,EAAA,YAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAAA,EADwB,KACxB,CADwB;AAA5B,CAAA;;MAAMN,I;KAAAA,I;AAYN,eAAA,IAAA","sourcesContent":["import React from 'react'\nimport { NextPage } from 'next'\n\nconst Page: NextPage = props => (\n    <div style={{\n        backgroundColor: '#FF8A80',\n        // padding: '20px',\n        fontSize: '50px',\n        position: \"relative\",\n        top: '20px',\n        textAlign: 'center',\n        height: '60px'\n    }}>Welcome</div>\n)\n\nexport default Page\n"]},"metadata":{},"sourceType":"module"}